			Test Filament <>

1- php artisan migrate

2- composer require filament/filament:"^2.0" [Doesn't Work Instead do the instructions bellow]

--------------------------------------------------------------------------------------
composer update laravel/framework

After that add this one "filament/filament": "^1.0 || ^2.0" to composer.json : require 
"require": {
        "php": "^8.1",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/framework": "^10.10",
        "laravel/sanctum": "^3.2",
        "laravel/tinker": "^2.8",

        "filament/filament": "^1.0 || ^2.0" <Ici>
    },

And at the end 
composer update filament/filament
--------------------------------------------------------------------------------------


3- php artisan make:filament-user

4- php artisan make:filament-resource User

5-app/Filament/Ressources/UserResource.php
----------------------------------------------------------------------------------------------------
use Filament\Resources\Table;
use Filament\Tables;
use Illuminate\Database\Eloquent\Builder;
 
public static function table(Table $table): Table
{
    return $table
        ->columns([
            Tables\Columns\TextColumn::make('name'),
            Tables\Columns\TextColumn::make('email'),
            // ...
        ])
        ->filters([
            Tables\Filters\Filter::make('verified')
                ->query(fn (Builder $query): Builder => $query->whereNotNull('email_verified_at')),
            // ...
        ])
        ->actions([
            Tables\Actions\EditAction::make(),
        ])
        ->bulkActions([
            Tables\Actions\DeleteBulkAction::make(),
        ]);
}
----------------------------------------------------------------------------------------------------

#cree un model -m (en meme temps fais la migration)
6- php artisan make:model Customer -m 

7- Tu vas dans migration du du model que ta cree et tu cree des propriete exple :
----------------------------------------------------------------------------------------------------
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('customers', function (Blueprint $table) {
            $table->id();
            $table->string('nom')->nullable();
            $table->string('prenom')->nullable();
            $table->string('Societe')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('customers');
    }
};
----------------------------------------------------------------------------------------------------

8-Dans Model/Nom_modelcree.php
-------------------------------------------------
class Customer extends Model
{
    use HasFactory;

    protected $fillable = [
        'nom',
        'prenom',
        'Societe',
    ];

}
-------------------------------------------------

9- php artisan migrate

10- Remplire les champ dans la bd

11- php artisan make:filament-resource Customer

12- app/Filament/Ressources/CustomerResource.php
----------------------------------------------------------------------------------------------------
<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CustomerResource\Pages;
use App\Filament\Resources\CustomerResource\RelationManagers;
use App\Models\Customer;
use Filament\Forms;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class CustomerResource extends Resource
{
    protected static ?string $model = Customer::class;

    protected static ?string $navigationIcon = 'heroicon-o-collection';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                //
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                //qu'est ce que on affiche dans le tableau cree automatiquement
                Tables\Columns\TextColumn::make('nom'),
                Tables\Columns\TextColumn::make('prenom'),
                Tables\Columns\TextColumn::make('Societe'),
<C'est dans sa j'ai add >
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\DeleteBulkAction::make(),
            ]);
    }
    
    public static function getRelations(): array
    {
        return [
            //
        ];
    }
    
    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCustomers::route('/'),
            'create' => Pages\CreateCustomer::route('/create'),
            'edit' => Pages\EditCustomer::route('/{record}/edit'),
        ];
    }    
}

----------------------------------------------------------------------------------------------------

13- Dans le meme CustomerResource.php je modifie public static function form(Form $form): Form pour cree mes formulaire quand on clique sur crÃ©e new Customer

-----------------------------------------------------------------------
public static function form(Form $form): Form
    {
        return $form
            ->schema([
                // les champs du formulaire de creation 
                Forms\Components\TextInput::make('nom')->required(),
                Forms\Components\TextInput::make('prenom')->required(),
                Forms\Components\TextInput::make('Societe')->required(),
            ]);
    }
-----------------------------------------------------------------------

14- Si on veut on peut ajouter 

->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])

Thanks for watching
deo link : https://www.youtube.com/watch?v=JOPe7DvUq1Y

